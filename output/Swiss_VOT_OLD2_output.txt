Model run using Apollo for R, version 0.2.6 on Windows by trish 
www.ApolloChoiceModelling.com

Model name                       : Swiss_VOT
Model description                : Model from Axhausen
Model run at                     : 2022-02-21 15:25:42
Estimation method                : bfgs
Model diagnosis                  : successful convergence 
Number of individuals            : 1225
Number of rows in database       : 15870
Number of modelled outcomes      : 15870
                               1 : 480
                               2 : 5784
                               3 : 1206
                               4 : 2838
                               5 : 2061
                               6 : 3501

Number of cores used             :  1 
Model without mixing

LL(start)                        : -11000.25
LL(0, whole model)               : -11000.25
LL(C, whole model)               : -10657.19
LL(final, whole model)           : -9720.334
Rho-square (0)                   :  0.1164 
Adj.Rho-square (0)               :  0.1155 
Rho-square (C)                   :  0.0879 
Adj.Rho-square (C)               :  0.0871 
AIC                              :  19458.67 
BIC                              :  19527.72 

LL(0,1)                          : -332.7106
LL(final,1)                      : -299.6513
LL(0,2)                          : -4009.163
LL(final,2)                      : -2764.528
LL(0,3)                          : -835.9355
LL(final,3)                      : -835.9091
LL(0,4)                          : -1967.152
LL(final,4)                      : -1965.528
LL(0,5)                          : -1428.576
LL(final,5)                      : -1428.128
LL(0,6)                          : -2426.708
LL(final,6)                      : -2426.589

Estimated parameters             :  9
Time taken (hh:mm:ss)            :  00:00:15.16 
     pre-estimation              :  00:00:0.99 
     estimation                  :  00:00:11.23 
     post-estimation             :  00:00:2.94 
Iterations                       :  146  
Min abs eigenvalue of Hessian    :  8.2e-05 

Unconstrained optimisation.

Estimates:
                     Estimate        s.e.   t.rat.(0)    Rob.s.e.
asc_a                0.000000          NA          NA          NA
asc_b                0.024175    0.070801      0.3414     0.15884
b_car_inertia        0.116237    0.343698      0.3382     0.77364
b_bus_disc           0.001258    0.007112      0.1769     0.01111
b_rail_disc          0.048957    0.145640      0.3361     0.32855
mu_mc_car_bus       30.840339   89.655153      0.3440   199.95194
mu_mc_car_rail      21.546343   63.810983      0.3377   143.69400
mu_rc_bus           -0.509338    2.751201     -0.1851     3.96826
mu_rc_car           -2.802318    8.360931     -0.3352    18.55100
mu_rc_rail_by_car   -1.706092    5.263143     -0.3242    11.20375
mu_rc_rail           1.000000          NA          NA          NA
                  Rob.t.rat.(0)
asc_a                        NA
asc_b                    0.1522
b_car_inertia            0.1502
b_bus_disc               0.1133
b_rail_disc              0.1490
mu_mc_car_bus            0.1542
mu_mc_car_rail           0.1499
mu_rc_bus               -0.1284
mu_rc_car               -0.1511
mu_rc_rail_by_car       -0.1523
mu_rc_rail                   NA


Overview of choices for MNL model component 1:
                                    car    bus
Times available                  480.00 480.00
Times chosen                     152.00 328.00
Percentage chosen overall         31.67  68.33
Percentage chosen when available  31.67  68.33


Overview of choices for MNL model component 2:
                                     car    rail
Times available                  5784.00 5784.00
Times chosen                     3827.00 1957.00
Percentage chosen overall          66.17   33.83
Percentage chosen when available   66.17   33.83


Overview of choices for MNL model component 3:
                                       a       b
Times available                  1206.00 1206.00
Times chosen                      607.00  599.00
Percentage chosen overall          50.33   49.67
Percentage chosen when available   50.33   49.67


Overview of choices for MNL model component 4:
                                       a       b
Times available                  2838.00 2838.00
Times chosen                     1467.00 1371.00
Percentage chosen overall          51.69   48.31
Percentage chosen when available   51.69   48.31


Overview of choices for MNL model component 5:
                                       a       b
Times available                  2061.00 2061.00
Times chosen                     1052.00 1009.00
Percentage chosen overall          51.04   48.96
Percentage chosen when available   51.04   48.96


Overview of choices for MNL model component 6:
                                       a       b
Times available                  3501.00 3501.00
Times chosen                     1735.00 1766.00
Percentage chosen overall          49.56   50.44
Percentage chosen when available   49.56   50.44


Classical covariance matrix:
                              asc_b     b_car_inertia
asc_b                      0.005013           0.02432
b_car_inertia              0.024316           0.11813
b_bus_disc               1.8177e-04        8.8173e-04
b_rail_disc                0.010294           0.05004
mu_mc_car_bus             -6.331845         -30.71419
mu_mc_car_rail            -4.513358         -21.93067
mu_rc_bus                  0.097433           0.47262
mu_rc_car                  0.581654           2.82146
mu_rc_rail_by_car          0.349579           1.69572
                         b_bus_disc       b_rail_disc
asc_b                    1.8177e-04           0.01029
b_car_inertia            8.8173e-04           0.05004
b_bus_disc                5.058e-05        3.7327e-04
b_rail_disc              3.7327e-04           0.02121
mu_mc_car_bus             -0.262541         -13.00249
mu_mc_car_rail            -0.163659          -9.29131
mu_rc_bus                  0.003533           0.20008
mu_rc_car                  0.021091           1.19443
mu_rc_rail_by_car          0.012676           0.71786
                      mu_mc_car_bus    mu_mc_car_rail
asc_b                       -6.3318           -4.5134
b_car_inertia              -30.7142          -21.9307
b_bus_disc                  -0.2625           -0.1637
b_rail_disc                -13.0025           -9.2913
mu_mc_car_bus             8038.0464         5700.9229
mu_mc_car_rail            5700.9229         4071.8416
mu_rc_bus                 -123.0693          -87.7242
mu_rc_car                 -734.6999         -523.6963
mu_rc_rail_by_car         -441.5610         -314.7461
                          mu_rc_bus         mu_rc_car
asc_b                      0.097433           0.58165
b_car_inertia              0.472621           2.82146
b_bus_disc                 0.003533           0.02109
b_rail_disc                0.200079           1.19443
mu_mc_car_bus           -123.069320        -734.69986
mu_mc_car_rail           -87.724189        -523.69631
mu_rc_bus                  7.569108          11.30535
mu_rc_car                 11.305354          69.90516
mu_rc_rail_by_car          6.794616          40.56254
                  mu_rc_rail_by_car
asc_b                       0.34958
b_car_inertia               1.69572
b_bus_disc                  0.01268
b_rail_disc                 0.71786
mu_mc_car_bus            -441.56104
mu_mc_car_rail           -314.74607
mu_rc_bus                   6.79462
mu_rc_car                  40.56254
mu_rc_rail_by_car          27.70067

Robust covariance matrix:
                              asc_b     b_car_inertia
asc_b                       0.02523          0.122830
b_car_inertia               0.12283          0.598514
b_bus_disc               7.2815e-04          0.003548
b_rail_disc                 0.05213          0.254136
mu_mc_car_bus             -31.72246       -154.440314
mu_mc_car_rail            -22.81041       -111.163660
mu_rc_bus                   0.48192          2.346346
mu_rc_car                   2.92873         14.257689
mu_rc_rail_by_car           1.75476          8.541950
                         b_bus_disc       b_rail_disc
asc_b                    7.2815e-04          0.052134
b_car_inertia              0.003548          0.254136
b_bus_disc               1.2344e-04          0.001507
b_rail_disc                0.001507          0.107946
mu_mc_car_bus             -0.992859        -65.551401
mu_mc_car_rail            -0.659016        -47.204256
mu_rc_bus                  0.013678          0.995928
mu_rc_car                  0.084533          6.051695
mu_rc_rail_by_car          0.050608          3.625633
                      mu_mc_car_bus    mu_mc_car_rail
asc_b                      -31.7225          -22.8104
b_car_inertia             -154.4403         -111.1637
b_bus_disc                  -0.9929           -0.6590
b_rail_disc                -65.5514          -47.2043
mu_mc_car_bus             3.998e+04         2.868e+04
mu_mc_car_rail            2.868e+04         2.065e+04
mu_rc_bus                 -603.0295         -435.7370
mu_rc_car                -3682.3780        -2647.8380
mu_rc_rail_by_car        -2206.2771        -1586.4077
                          mu_rc_bus         mu_rc_car
asc_b                       0.48192           2.92873
b_car_inertia               2.34635          14.25769
b_bus_disc                  0.01368           0.08453
b_rail_disc                 0.99593           6.05170
mu_mc_car_bus            -603.02947       -3682.37799
mu_mc_car_rail           -435.73703       -2647.83805
mu_rc_bus                  15.74705          55.94249
mu_rc_car                  55.94249         344.13953
mu_rc_rail_by_car          33.51630         203.69383
                  mu_rc_rail_by_car
asc_b                       1.75476
b_car_inertia               8.54195
b_bus_disc                  0.05061
b_rail_disc                 3.62563
mu_mc_car_bus           -2206.27707
mu_mc_car_rail          -1586.40766
mu_rc_bus                  33.51630
mu_rc_car                 203.69383
mu_rc_rail_by_car         125.52398

Classical correlation matrix:
                              asc_b     b_car_inertia
asc_b                        1.0000            0.9993
b_car_inertia                0.9993            1.0000
b_bus_disc                   0.3610            0.3607
b_rail_disc                  0.9983            0.9997
mu_mc_car_bus               -0.9975           -0.9968
mu_mc_car_rail              -0.9990           -1.0000
mu_rc_bus                    0.5002            0.4998
mu_rc_car                    0.9826            0.9818
mu_rc_rail_by_car            0.9381            0.9374
                         b_bus_disc       b_rail_disc
asc_b                        0.3610            0.9983
b_car_inertia                0.3607            0.9997
b_bus_disc                   1.0000            0.3604
b_rail_disc                  0.3604            1.0000
mu_mc_car_bus               -0.4117           -0.9958
mu_mc_car_rail              -0.3606           -0.9998
mu_rc_bus                    0.1806            0.4993
mu_rc_car                    0.3547            0.9809
mu_rc_rail_by_car            0.3386            0.9365
                      mu_mc_car_bus    mu_mc_car_rail
asc_b                       -0.9975           -0.9990
b_car_inertia               -0.9968           -1.0000
b_bus_disc                  -0.4117           -0.3606
b_rail_disc                 -0.9958           -0.9998
mu_mc_car_bus                1.0000            0.9965
mu_mc_car_rail               0.9965            1.0000
mu_rc_bus                   -0.4989           -0.4997
mu_rc_car                   -0.9801           -0.9816
mu_rc_rail_by_car           -0.9358           -0.9372
                          mu_rc_bus         mu_rc_car
asc_b                        0.5002            0.9826
b_car_inertia                0.4998            0.9818
b_bus_disc                   0.1806            0.3547
b_rail_disc                  0.4993            0.9809
mu_mc_car_bus               -0.4989           -0.9801
mu_mc_car_rail              -0.4997           -0.9816
mu_rc_bus                    1.0000            0.4915
mu_rc_car                    0.4915            1.0000
mu_rc_rail_by_car            0.4692            0.9218
                  mu_rc_rail_by_car
asc_b                        0.9381
b_car_inertia                0.9374
b_bus_disc                   0.3386
b_rail_disc                  0.9365
mu_mc_car_bus               -0.9358
mu_mc_car_rail              -0.9372
mu_rc_bus                    0.4692
mu_rc_car                    0.9218
mu_rc_rail_by_car            1.0000

Robust correlation matrix:
                              asc_b     b_car_inertia
asc_b                        1.0000            0.9996
b_car_inertia                0.9996            1.0000
b_bus_disc                   0.4126            0.4128
b_rail_disc                  0.9990            0.9998
mu_mc_car_bus               -0.9988           -0.9984
mu_mc_car_rail              -0.9994           -1.0000
mu_rc_bus                    0.7646            0.7643
mu_rc_car                    0.9939            0.9934
mu_rc_rail_by_car            0.9860            0.9855
                         b_bus_disc       b_rail_disc
asc_b                        0.4126            0.9990
b_car_inertia                0.4128            0.9998
b_bus_disc                   1.0000            0.4129
b_rail_disc                  0.4129            1.0000
mu_mc_car_bus               -0.4469           -0.9978
mu_mc_car_rail              -0.4128           -0.9999
mu_rc_bus                    0.3102            0.7639
mu_rc_car                    0.4101            0.9929
mu_rc_rail_by_car            0.4066            0.9850
                      mu_mc_car_bus    mu_mc_car_rail
asc_b                       -0.9988           -0.9994
b_car_inertia               -0.9984           -1.0000
b_bus_disc                  -0.4469           -0.4128
b_rail_disc                 -0.9978           -0.9999
mu_mc_car_bus                1.0000            0.9982
mu_mc_car_rail               0.9982            1.0000
mu_rc_bus                   -0.7600           -0.7642
mu_rc_car                   -0.9927           -0.9933
mu_rc_rail_by_car           -0.9849           -0.9854
                          mu_rc_bus         mu_rc_car
asc_b                        0.7646            0.9939
b_car_inertia                0.7643            0.9934
b_bus_disc                   0.3102            0.4101
b_rail_disc                  0.7639            0.9929
mu_mc_car_bus               -0.7600           -0.9927
mu_mc_car_rail              -0.7642           -0.9933
mu_rc_bus                    1.0000            0.7599
mu_rc_car                    0.7599            1.0000
mu_rc_rail_by_car            0.7539            0.9800
                  mu_rc_rail_by_car
asc_b                        0.9860
b_car_inertia                0.9855
b_bus_disc                   0.4066
b_rail_disc                  0.9850
mu_mc_car_bus               -0.9849
mu_mc_car_rail              -0.9854
mu_rc_bus                    0.7539
mu_rc_car                    0.9800
mu_rc_rail_by_car            1.0000

 20 worst outliers in terms of lowest average per choice prediction:
    ID Avg prob per choice
 18811           0.2444474
 19031           0.2444474
 20968           0.2458313
 80475           0.2821998
 17155           0.2867626
 21893           0.2867626
 19688           0.2900188
 25199           0.2916607
 20584           0.2933119
 82013           0.3238741
 21846           0.3239814
 15603           0.3255516
 18790           0.3260767
 19470           0.3260767
 14010           0.3266027
 17169           0.3271295
 17502           0.3383073
 20086           0.3383073
 14801           0.3402227
 78780           0.3402227

Changes in parameter estimates from starting values:
                      Initial    Estimate  Difference
asc_a                   0.000    0.000000    0.000000
asc_b                   0.000    0.024175    0.024175
b_car_inertia           0.000    0.116237    0.116237
b_bus_disc              0.000    0.001258    0.001258
b_rail_disc             0.000    0.048957    0.048957
mu_mc_car_bus           1.000   30.840339   29.840339
mu_mc_car_rail          1.000   21.546343   20.546343
mu_rc_bus               1.000   -0.509338   -1.509338
mu_rc_car               1.000   -2.802318   -3.802318
mu_rc_rail_by_car       1.000   -1.706092   -2.706092
mu_rc_rail              1.000    1.000000    0.000000

Settings and functions used in model definition:

apollo_control
--------------
                       Value                
modelName              "Swiss_VOT"          
modelDescr             "Model from Axhausen"
indivID                "P_NR"               
outputDirectory        "output/"            
debug                  "FALSE"              
nCores                 "1"                  
workInLogs             "FALSE"              
seed                   "13"                 
mixing                 "FALSE"              
HB                     "FALSE"              
noValidation           "FALSE"              
noDiagnostics          "FALSE"              
calculateLLC           "TRUE"               
panelData              "TRUE"               
analyticGrad           "TRUE"               
analyticGrad_manualSet "FALSE"              

Hessian routines attempted
--------------
numerical jacobian of LL analytical gradient

Scaling in estimation
--------------
                         Value
asc_b              0.041584564
b_car_inertia      0.204812723
b_bus_disc         0.001287377
b_rail_disc        0.087103054
mu_mc_car_bus     18.402759985
mu_mc_car_rail    12.174016436
mu_rc_bus          0.313625263
mu_rc_car          1.620426642
mu_rc_rail_by_car  1.044358981

Scaling used in computing Hessian
--------------
                         Value
asc_b              0.024175094
b_car_inertia      0.116237206
b_bus_disc         0.001258401
b_rail_disc        0.048956562
mu_mc_car_bus     30.840339050
mu_mc_car_rail    21.546343275
mu_rc_bus          0.509338308
mu_rc_car          2.802317547
mu_rc_rail_by_car  1.706091949


apollo_probabilities
--------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()
  
  # ### Elasticities
  # dist = T_DIST_C
  # dist_pt_elas = # need to multiply by TT_PT
  #   b_tt_pt_business * PUR_N * (dist/mean(dist))^lam_dist_tt_pt_business +
  #   b_tt_pt_commuters * PUR_P * (dist/mean(dist))^lam_dist_tt_pt_commuters +
  #   b_tt_pt_leisure * PUR_T * (dist/mean(dist))^lam_dist_tt_pt_leisure +
  #   b_tt_pt_shopping * PUR_E * (dist/mean(dist))^lam_dist_tt_pt_shopping
  # 
  #  dist_car_elas = # need to multiply by TT_CAR
  #   b_tt_car_business * PUR_N * (dist/mean(dist))^lam_dist_tt_car_business +
  #   b_tt_car_commuters * PUR_P * (dist/mean(dist))^lam_dist_tt_car_commuters +
  #   b_tt_car_leisure * PUR_T * (dist/mean(dist))^lam_dist_tt_car_leisure +
  #   b_tt_car_shopping * PUR_E * (dist/mean(dist))^lam_dist_tt_car_shopping
  
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["car"]]  = b_car_inertia * CAR 
  V[["bus"]]  = b_bus_disc  * DISCOUNT
  V[["rail"]] = b_rail_disc * DISCOUNT
  
  V[["a"]]    = asc_a #+ b_dc * DC_A * CAR_A  +  dist_pt_elas * TT_A * PT_A   +  dist_car_elas * TT_A * CAR_A
  V[["b"]]    = asc_b #+ b_dc * DC_B * CAR_B  +  dist_pt_elas * TT_B * PT_B   +  dist_car_elas * TT_B * CAR_B
  
  ### Compute probabilities for the RP part of the data using MNL model
  mnl_settings_1 = list(
    alternatives  = c(car=1, bus = 2), 
    avail         = list(car= 1, bus=1), 
    choiceVar     = CHOICE, 
    utilities     = list(car  = mu_mc_car_bus*(V[["car"]] + V[["a"]]),
                         bus  = mu_mc_car_bus*(V[["bus"]] + V[["b"]])),
    rows          = (N_O_S==1)
  )
  
  P[["1"]] = apollo_mnl(mnl_settings_1, functionality)
  
  mnl_settings_2 = list(
    alternatives  = c(car=1, rail = 2), 
    avail         = list(car= 1, rail=1), 
    choiceVar     = CHOICE, 
    utilities     = list(car  = mu_mc_car_rail*(V[["car"]] + V[["a"]]),
                         rail = mu_mc_car_rail*(V[["rail"]]+ V[["b"]])),
    rows          = (N_O_S==2)
  )
  
  P[["2"]] = apollo_mnl(mnl_settings_2, functionality)
  
  mnl_settings_3 = list(
    alternatives  = c(a=1, b = 2), 
    avail         = list(a = 1, b = 1), 
    choiceVar     = CHOICE, 
    utilities     = list(a  = mu_rc_bus *V[["a"]],
                         b  = mu_rc_bus *V[["b"]]),
    rows          = (N_O_S==3)
  )
  
  P[["3"]] = apollo_mnl(mnl_settings_3, functionality)
  
  mnl_settings_4 = list(
    alternatives  = c(a=1, b = 2), 
    avail         = list(a = 1, b = 1), 
    choiceVar     = CHOICE, 
    utilities     = list(a  = mu_rc_car *V[["a"]],
                         b  = mu_rc_car *V[["b"]]),
    rows          = (N_O_S==4)
  )
  
  P[["4"]] = apollo_mnl(mnl_settings_4, functionality)
  
  mnl_settings_5 = list(
    alternatives  = c(a=1, b = 2), 
    avail         = list(a = 1, b = 1), 
    choiceVar     = CHOICE, 
    utilities     = list(a  = mu_rc_rail_by_car *V[["a"]],
                         b  = mu_rc_rail_by_car *V[["b"]]),
    rows          = (N_O_S==5)
  )
  
  P[["5"]] = apollo_mnl(mnl_settings_5, functionality)
  
  mnl_settings_6 = list(
    alternatives  = c(a=1, b = 2), 
    avail         = list(a = 1, b = 1), 
    choiceVar     = CHOICE, 
    utilities     = list(a  = mu_rc_rail *V[["a"]],
                         b  = mu_rc_rail *V[["b"]]),
    rows          = (N_O_S==6)
  )
  
  P[["6"]] = apollo_mnl(mnl_settings_6, functionality)
  
  ### Combined model
  P = apollo_combineModels(P, apollo_inputs, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
  
}
